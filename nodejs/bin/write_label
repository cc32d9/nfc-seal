#!/usr/bin/env node

'use strict'
const program           = require('commander');
const ecc               = require('eosjs-ecc');
const seal              = require('../lib/nfc-seal');


program
    .option('--issuer [value]', 'Issuer ID')
    .option('--seq [value]', 'Sequence number', 1)
    .option('--key [value]', 'Private key')
    .option('--loop', 'Continue by increasing sequence number')
    .parse(process.argv);

if (!program.issuer || !program.key) {
    program.help();
}


const issuer = Buffer.allocUnsafe(8);
issuer.writeBigUInt64BE(BigInt(program.issuer));

const seqnum = Buffer.allocUnsafe(8);
seqnum.writeBigUInt64BE(BigInt(program.seq));

const privkey = ecc.PrivateKey.fromString(program.key);

seal.nfc_loop(do_write_label, !program.loop);

async function do_write_label(reader, card) {
    console.info('Writing a label for issuerid=' + label.issuerid.readBigInt64BE().toString(10) +
                 ' and seqnum=' + label.seqnum.readBigInt64BE().toString(10));

    await seal.write_label(reader, card, issuer, seqnum, privkey);
    console.info('Done');
    
    if( program.loop ) {
        let s = seqnum.readBigInt64BE();
        s++;
        seqnum.writeBigUInt64BE(s);
    }
}










/*
 Local Variables:
 mode: javascript
 indent-tabs-mode: nil
 End:
*/
